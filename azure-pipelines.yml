pr: none
trigger: none

parameters:
  - name: 'INPUT_FILE_NAME'
    displayName: 'Input file name'
    type: string
    default: 'sample.csv'
  - name: 'API_KEY'
    displayName: 'Api key'
    type: string
  - name: 'MESSAGE_FILE_NAME'
    displayName: 'Message file name'
    type: string
  - name: 'MAX_ROWS_FILE'
    displayName: 'How many rows will contains the files (a low value increase delivery speed, max value is 100000)'
    type: string
    default: '50000'

pool:
  vmImage: ubuntu-latest

steps:
# - bash: |
#     echo "current folder: $(pwd)"
#     FROM_SOURCE=$(cat .node-version || cat .nvmrc)
#     ls .node-version && echo ".node-version found, value: '$(cat .node-version)'" || echo ".node-version not found" 
#     ls .nvmrc && echo ".nvmrc found, value: '$(cat .nvmrc)'" || echo ".nvmrc not found" 
#     echo "set FROM_SOURCE='$FROM_SOURCE'"
#     echo "##vso[task.setvariable variable=NODE_VERSION]$FROM_SOURCE"
#   displayName: 'Determine Node.js version from source'

# - task: UseNode@1
#   inputs:
#     version: $(NODE_VERSION)
#   displayName: 'Set up Node.js'

# - bash: |
#     echo "current folder: $(pwd)"
#     yarn install --frozen-lockfile --no-progress --non-interactive
#   displayName: 'Install node modules'

# - bash: |
#     yarn build
#   displayName: 'Build'

- bash: |
    TIMESTAMP=$(date +%s)
    echo "${TIMESTAMP}"
    echo "${ENV_INPUT_FILE_NAME}"
    echo "${ENV_MAX_ROWS_FILE}"

    az storage blob download \
      --account-name iopstexportdata \
      --container-name input \
      --name "invii_spot/${ENV_INPUT_FILE_NAME}" \
      --file "${TIMESTAMP}.txt" \
      --account-key "${ENV_STORAGE_KEY}"

    mkdir -p output
    split --lines="${ENV_MAX_ROWS_FILE}" "${TIMESTAMP}.txt" "output/timestamp"

    wc -l output/timestamp*

    az config set extension.use_dynamic_install=yes_without_prompt
    az storage blob directory upload \
      --account-name iopstexportdata \
      --container input \
      --source "output/timestamp*" \
      --destination-path "invii_spot/${TIMESTAMP}" \
      --recursive \
      --account-key "${ENV_STORAGE_KEY}"
  env:
    ENV_INPUT_FILE_NAME: '${{ parameters.INPUT_FILE_NAME }}'
    ENV_MAX_ROWS_FILE: '${{ parameters.MAX_ROWS_FILE }}'
    ENV_STORAGE_KEY: '$(STORAGE_KEY)'
  displayName: 'split'