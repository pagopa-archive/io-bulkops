pr: none
trigger: none

parameters:
  - name: 'INPUT_FILE_NAME'
    displayName: 'Input file name'
    type: string
    default: 'sample.csv'
  - name: 'API_KEY'
    displayName: 'Api key'
    type: string
  - name: 'MESSAGE_FILE_NAME'
    displayName: 'Message file name'
    type: string
  - name: 'MAX_ROWS_FILE'
    displayName: 'How many rows will contains the files (a low value increase delivery speed, max value is 100000)'
    type: string
    default: '50000'

pool:
  vmImage: ubuntu-latest

steps:
- bash: |
    TIMESTAMP=$(date +%s)
    BASE_PATH="invii_spot"
    echo "${TIMESTAMP}"
    echo "${ENV_INPUT_FILE_NAME}"
    echo "${ENV_MAX_ROWS_FILE}"

    az storage blob download \
      --account-name iopstexportdata \
      --container-name input \
      --name "${BASE_PATH}/${ENV_INPUT_FILE_NAME}" \
      --file "${TIMESTAMP}.txt" \
      --account-key "${ENV_STORAGE_KEY}"

    mkdir -p output
    split --lines="${ENV_MAX_ROWS_FILE}" "${TIMESTAMP}.txt" "output/splitted_"

    wc -l output/timestamp*

    az config set extension.use_dynamic_install=yes_without_prompt
    az storage blob directory upload \
      --account-name iopstexportdata \
      --container input \
      --source "output/splitted_*" \
      --destination-path "${BASE_PATH}/${TIMESTAMP}" \
      --recursive \
      --account-key "${ENV_STORAGE_KEY}"
    
    cd output
    for filename in splitted_*; do
      [ -e "$filename" ] || continue
      echo "${BASE_PATH}/${TIMESTAMP}/${filename}"
    done
  env:
    ENV_INPUT_FILE_NAME: '${{ parameters.INPUT_FILE_NAME }}'
    ENV_MAX_ROWS_FILE: '${{ parameters.MAX_ROWS_FILE }}'
    ENV_STORAGE_KEY: '$(STORAGE_KEY)'
    ENV_LOGIC_APP_KEY: '$(LOGIC_APP_KEY)'
  displayName: 'split'